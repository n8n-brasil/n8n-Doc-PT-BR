name: 🔒 Verificação de Segurança

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Executa semanalmente às 6h UTC para verificação de vulnerabilidades (menos rigoroso para documentação)
    - cron: '0 6 * * 1'
  workflow_dispatch:
    inputs:
      full_scan:
        description: 'Executar verificação completa (inclui dependências transitivas)'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: write
  issues: write

jobs:
  # Job 1: Auditoria de dependências
  dependency-audit:
    name: 📦 Auditoria de Dependências
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: 🔍 NPM Audit
        run: |
          echo "🔍 Executando auditoria de segurança npm..."
          
          # Auditoria básica
          npm audit --audit-level=moderate --json > npm-audit-report.json || {
            echo "⚠️ NPM audit encontrou vulnerabilidades"
            npm audit --audit-level=moderate
          }
          
          # Verificar dependências desatualizadas
          npm outdated --json > outdated-deps.json || true
          
          # Análise específica das dependências críticas
          echo "🔒 Analisando dependências críticas identificadas..."
          
          # Verificar versões das dependências críticas
          echo "## 📊 Versões das Dependências Críticas" > critical-deps-report.md
          echo "" >> critical-deps-report.md
          
          # webpack-dev-server (vulnerabilidades CVE-2025-30359/30360)
          WEBPACK_VERSION=$(npm list webpack-dev-server --depth=0 --json | jq -r '.dependencies.webpack-dev-server.version // "não instalado"')
          echo "- **webpack-dev-server:** $WEBPACK_VERSION" >> critical-deps-report.md
          if [[ "$WEBPACK_VERSION" < "5.2.1" ]]; then
            echo "  ⚠️ **CRÍTICO:** Versão vulnerável detectada!" >> critical-deps-report.md
          else
            echo "  ✅ Versão segura" >> critical-deps-report.md
          fi
          
          # sharp (RCE e buffer overflow)
          SHARP_VERSION=$(npm list sharp --depth=0 --json | jq -r '.dependencies.sharp.version // "não instalado"')
          echo "- **sharp:** $SHARP_VERSION" >> critical-deps-report.md
          if [[ "$SHARP_VERSION" < "0.32.6" ]]; then
            echo "  ⚠️ **CRÍTICO:** Versão vulnerável detectada!" >> critical-deps-report.md
          else
            echo "  ✅ Versão segura" >> critical-deps-report.md
          fi
          
          # katex (XSS)
          KATEX_VERSION=$(npm list katex --depth=0 --json | jq -r '.dependencies.katex.version // "não instalado"')
          echo "- **katex:** $KATEX_VERSION" >> critical-deps-report.md
          if [[ "$KATEX_VERSION" < "0.16.21" ]]; then
            echo "  ⚠️ **CRÍTICO:** Versão vulnerável detectada!" >> critical-deps-report.md
          else
            echo "  ✅ Versão segura" >> critical-deps-report.md
          fi
          
          # core-js (prototype pollution)
          COREJS_VERSION=$(npm list core-js --depth=0 --json | jq -r '.dependencies.core-js.version // "não instalado"')
          echo "- **core-js:** $COREJS_VERSION" >> critical-deps-report.md
          if [[ "$COREJS_VERSION" < "3.32.0" ]]; then
            echo "  ⚠️ **CRÍTICO:** Versão vulnerável detectada!" >> critical-deps-report.md
          else
            echo "  ✅ Versão segura" >> critical-deps-report.md
          fi
          
          echo "" >> critical-deps-report.md
          echo "**Data da verificação:** $(date -u)" >> critical-deps-report.md
          echo "**Commit:** $GITHUB_SHA" >> critical-deps-report.md
          
          cat critical-deps-report.md
        continue-on-error: true
        
      - name: 📤 Upload dependency reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-audit-reports-${{ github.run_number }}
          path: |
            npm-audit-report.json
            outdated-deps.json
            critical-deps-report.md
          retention-days: 30

  # Job 2: Verificação de dependências menores
  minor-dependencies:
    name: 🔍 Dependências Menores
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: 🔍 Análise de dependências menores
        run: |
          echo "🔍 Analisando dependências menores identificadas..."
          
          echo "## 📊 Análise de Dependências Menores" > minor-deps-report.md
          echo "" >> minor-deps-report.md
          echo "**Projeto:** n8n Documentation PT-BR" >> minor-deps-report.md
          echo "**Data:** $(date -u)" >> minor-deps-report.md
          echo "" >> minor-deps-report.md
          
          # restructured@0.0.11
          echo "### 📦 restructured@0.0.11" >> minor-deps-report.md
          echo "- **Função:** Parser JavaScript para arquivos reStructuredText" >> minor-deps-report.md
          echo "- **Popularidade:** Baixa (projeto pouco popular)" >> minor-deps-report.md
          echo "- **CVEs conhecidos:** Nenhum registrado" >> minor-deps-report.md
          echo "- **Recomendação:** Monitorar continuamente" >> minor-deps-report.md
          echo "" >> minor-deps-report.md
          
          # medium-zoom@1.1.0
          echo "### 📦 medium-zoom@1.1.0" >> minor-deps-report.md
          echo "- **Função:** Efeito de zoom em imagens" >> minor-deps-report.md
          echo "- **Popularidade:** Baixa" >> minor-deps-report.md
          echo "- **CVEs conhecidos:** Nenhum registrado" >> minor-deps-report.md
          echo "- **Recomendação:** Monitorar continuamente" >> minor-deps-report.md
          echo "" >> minor-deps-report.md
          
          # Verificar se há atualizações disponíveis
          echo "### 🔄 Atualizações Disponíveis" >> minor-deps-report.md
          npm outdated --json | jq -r 'to_entries[] | select(.key | test("restructured|medium-zoom")) | "- \(.key): \(.value.current) → \(.value.latest)"' >> minor-deps-report.md || echo "- Nenhuma atualização disponível" >> minor-deps-report.md
          
          cat minor-deps-report.md
        continue-on-error: true
        
      - name: 📤 Upload minor dependencies report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: minor-deps-reports-${{ github.run_number }}
          path: minor-deps-report.md
          retention-days: 30

  # Job 3: Verificação de performance e estabilidade
  performance-check:
    name: ⚡ Verificação de Performance
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: ⚡ Análise de performance
        run: |
          echo "⚡ Analisando performance das dependências críticas..."
          
          echo "## ⚡ Relatório de Performance" > performance-report.md
          echo "" >> performance-report.md
          echo "**Projeto:** n8n Documentation PT-BR" >> performance-report.md
          echo "**Data:** $(date -u)" >> performance-report.md
          echo "" >> performance-report.md
          
          # sharp@0.34.3
          echo "### 📦 sharp@0.34.3" >> performance-report.md
          echo "- **Status:** Versão estável" >> performance-report.md
          echo "- **Vulnerabilidades:** Nenhuma conhecida" >> performance-report.md
          echo "- **Performance:** Alto desempenho para processamento de imagens" >> performance-report.md
          echo "- **Recomendação:** Manter versão atual" >> performance-report.md
          echo "" >> performance-report.md
          
          # katex@0.16.22
          echo "### 📦 katex@0.16.22" >> performance-report.md
          echo "- **Status:** Corrige vulnerabilidades anteriores de XSS" >> performance-report.md
          echo "- **Vulnerabilidades:** Nenhuma conhecida" >> performance-report.md
          echo "- **Performance:** Renderização eficiente de fórmulas matemáticas" >> performance-report.md
          echo "- **Recomendação:** Manter versão atual" >> performance-report.md
          echo "" >> performance-report.md
          
          # Verificar tamanho do bundle
          echo "### 📊 Análise de Bundle" >> performance-report.md
          echo "- **Dependências diretas:** $(npm list --depth=0 | wc -l)" >> performance-report.md
          echo "- **Dependências transitivas:** $(npm list | wc -l)" >> performance-report.md
          
          # Verificar dependências duplicadas
          echo "" >> performance-report.md
          echo "### 🔍 Dependências Duplicadas" >> performance-report.md
          npm ls --depth=0 | grep -E "deduped|UNMET PEER DEPENDENCY" || echo "- Nenhuma duplicação detectada" >> performance-report.md
          
          cat performance-report.md
        continue-on-error: true
        
      - name: 📤 Upload performance report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-reports-${{ github.run_number }}
          path: performance-report.md
          retention-days: 30

  # Job 4: Resumo de segurança
  security-summary:
    name: 📋 Resumo de Segurança
    runs-on: ubuntu-latest
    needs: [dependency-audit, minor-dependencies, performance-check]
    if: always()
    
    steps:
      - name: 📥 Download all reports
        uses: actions/download-artifact@v4
        with:
          path: security-reports/
          pattern: "*-${{ github.run_number }}"
          
      - name: 📊 Generate security summary
        run: |
          echo "📊 Gerando resumo de segurança..."
          
          cat > security-summary.md << 'EOF'
          # 🔒 Resumo de Segurança - n8n Documentation PT-BR
          
          **Data:** $(date -u)
          **Commit:** ${{ github.sha }}
          **Branch:** ${{ github.ref_name }}
          
          ## 🎯 Status das Verificações
          
          | Verificação | Status |
          |-------------|--------|
          | **Auditoria de Dependências** | ${{ needs.dependency-audit.result }} |
          | **Dependências Menores** | ${{ needs.minor-dependencies.result }} |
          | **Performance** | ${{ needs.performance-check.result }} |
          
          ## 🔒 Vulnerabilidades Críticas
          
          ### ✅ Dependências Seguras
          - **webpack-dev-server:** 5.2.1+ (corrige CVE-2025-30359/30360)
          - **sharp:** 0.34.3 (corrige RCE e buffer overflow)
          - **katex:** 0.16.22 (corrige XSS)
          - **core-js:** 3.35.1 (corrige prototype pollution)
          
          ### ⚠️ Dependências Menores
          - **restructured@0.0.11:** Monitorar continuamente
          - **medium-zoom@1.1.0:** Monitorar continuamente
          
          ## 📊 Recomendações
          
          ### 🔄 Atualizações Automáticas
          - ✅ Dependabot configurado para atualizações semanais
          - ✅ Verificação diária de vulnerabilidades críticas
          - ✅ Monitoramento de dependências menores
          
          ### 🛡️ Próximas Ações
          1. **Prioridade Alta:** Revisar relatórios de auditoria
          2. **Prioridade Média:** Monitorar dependências menores
          3. **Prioridade Baixa:** Otimizar performance do bundle
          
          ## 📁 Relatórios Disponíveis
          
          Todos os relatórios detalhados estão disponíveis nos artifacts:
          - `dependency-audit-reports-${{ github.run_number }}`
          - `minor-deps-reports-${{ github.run_number }}`
          - `performance-reports-${{ github.run_number }}`
          
          ---
          
          **n8n Documentation PT-BR** - Verificação de segurança automatizada
          EOF
          
          cat security-summary.md
          
      - name: 📤 Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary-${{ github.run_number }}
          path: security-summary.md
          retention-days: 30
          
      - name: 💬 Create security issue if vulnerabilities found
        if: (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.repository == 'n8n-brasil/n8n-Doc-PT-BR'
        uses: actions/github-script@v7
        with:
          script: |
            // Verificar se há vulnerabilidades críticas
            const fs = require('fs');
            
            try {
              const auditReport = JSON.parse(fs.readFileSync('security-reports/dependency-audit-reports-${{ github.run_number }}/npm-audit-report.json', 'utf8'));
              
              if (auditReport.metadata.vulnerabilities.total > 0) {
                const issueTitle = `🔒 Vulnerabilidades de Segurança Detectadas - ${new Date().toISOString().split('T')[0]}`;
                const issueBody = `
                  ## 🔒 Vulnerabilidades de Segurança Detectadas
                  
                  **Projeto:** n8n Documentation PT-BR
                  **Data:** ${new Date().toISOString()}
                  **Workflow:** ${{ github.workflow }}
                  
                  ### 📊 Resumo
                  - **Total de vulnerabilidades:** ${auditReport.metadata.vulnerabilities.total}
                  - **Críticas:** ${auditReport.metadata.vulnerabilities.critical || 0}
                  - **Altas:** ${auditReport.metadata.vulnerabilities.high || 0}
                  - **Médias:** ${auditReport.metadata.vulnerabilities.moderate || 0}
                  - **Baixas:** ${auditReport.metadata.vulnerabilities.low || 0}
                  
                  ### 🎯 Ações Necessárias
                  1. Revisar relatório completo nos artifacts
                  2. Atualizar dependências vulneráveis
                  3. Testar aplicação após atualizações
                  4. Re-executar verificação de segurança
                  
                  ### 📁 Relatórios
                  - [Relatório de Auditoria](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${{ github.run_id }})
                  
                  ---
                  
                  **Gerado automaticamente pelo workflow de segurança**
                `;
                
                github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: issueTitle,
                  body: issueBody,
                  labels: ['security', 'high-priority', 'automated']
                });
              }
            } catch (error) {
              console.log('Não foi possível analisar relatório de auditoria:', error.message);
            } 