name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  # Job 1: Valida√ß√£o e Build
  validate-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Validate scripts exist
      run: npm run ci:validate-full
    
    - name: Run linter
      run: npm run lint
      continue-on-error: true
    
    - name: Run type checking
      run: npm run typecheck
      continue-on-error: true
    
    - name: Build project
      run: npm run build
    
    - name: Check build output
      run: |
        if [ -d "build" ]; then
          echo "‚úÖ Build successful"
          echo "üìä Build size: $(du -sh build/ | cut -f1)"
          echo "üìÑ Files generated: $(find build -type f | wc -l)"
        else
          echo "‚ùå Build failed"
          exit 1
        fi

  # Job 2: Valida√ß√£o de Qualidade (Simplificado)
  quality-validation:
    runs-on: ubuntu-latest
    needs: validate-and-build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Security check
      run: npm run security:check
      continue-on-error: true
    
    - name: Markdown lint
      run: npm run markdown:lint
      continue-on-error: true

  # Job 3: Deploy (apenas para main)
  deploy:
    runs-on: ubuntu-latest
    needs: [validate-and-build, quality-validation]
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Build for production
      run: npm run build
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 